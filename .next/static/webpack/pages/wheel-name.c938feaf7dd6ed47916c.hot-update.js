webpackHotUpdate_N_E("pages/wheel-name",{

/***/ "./utils/randomWheel.js":
/*!******************************!*\
  !*** ./utils/randomWheel.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {(function (root) {\n  'use strict';\n\n  function _merge(obj1, obj2) {\n    var obj3 = {};\n\n    for (var attrname in obj1) {\n      obj3[attrname] = obj1[attrname];\n    }\n\n    for (var attrname in obj2) {\n      obj3[attrname] = obj2[attrname];\n    }\n\n    return obj3;\n  }\n\n  var PrizeWheel = function PrizeWheel(options) {\n    var _this = this,\n        defaults,\n        s,\n        ctx,\n        canvas;\n\n    defaults = {\n      el: null,\n      members: ['Member 1', 'Member 2', 'Member 3', 'Member 4'],\n      colors: ['#C7181D', '#FCB937', '#A1B836', '#371979', '#C7181D', '#FCB937', '#A1B836', '#371979'],\n      radius: 250,\n      startAngle: 0,\n      textRadius: 160\n    }; // s for settings\n\n    s = _merge(defaults, options);\n    s.width = s.height = s.radius * 2;\n    s.insideRadius = s.width / 5;\n    s.outsideRadius = s.width / 2 - 10;\n    s.startAngle = s.startAngle === 'random' ? Math.floor(Math.random() * 360) : s.startAngle;\n    s.arc = Math.PI / (s.members.length / (s.members.length / (s.members.length / 2)));\n    s.spinTimeout = null;\n    s.spinTime = 0;\n    s.spinTimeTotal = 0;\n    s.spinAngleStart = null;\n\n    this.draw = function () {\n      var angle, text, i;\n      canvas = document.querySelector(s.el);\n      canvas.width = s.width;\n      canvas.height = s.height;\n\n      if (canvas.getContext) {\n        ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, s.width, s.height);\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 2;\n        ctx.font = '16px sans-serif';\n\n        for (i = 0; i < s.members.length; i++) {\n          angle = s.startAngle + i * s.arc;\n          ctx.fillStyle = s.colors[i];\n          ctx.beginPath();\n          ctx.arc(s.width / 2, s.height / 2, s.outsideRadius, angle, angle + s.arc, false); //   ctx.arc(s.width / 2, s.height / 2, s.insideRadius, angle + s.arc, angle, true);\n\n          ctx.arc(s.width / 2, 40, s.insideRadius, angle + s.arc, angle, true);\n          ctx.stroke();\n          ctx.fill();\n          ctx.save();\n          ctx.shadowOffsetX = -1;\n          ctx.shadowOffsetY = -1;\n          ctx.shadowBlur = 0;\n          ctx.fillStyle = 'black';\n          ctx.translate(s.width / 2 + Math.cos(angle + s.arc / 2) * s.textRadius, s.height / 2 + Math.sin(angle + s.arc / 2) * s.textRadius);\n          ctx.rotate(s.angle + s.arc / 2 + Math.PI / 2);\n          text = s.members[i];\n          ctx.fillText(text, -ctx.measureText(text).width / 2, 0);\n          ctx.restore();\n        } //Arrow\n\n\n        ctx.fillStyle = 'black';\n        ctx.beginPath();\n        ctx.moveTo(s.radius - 4, s.radius - (s.outsideRadius + 5));\n        ctx.lineTo(s.radius + 4, s.radius - (s.outsideRadius + 5));\n        ctx.lineTo(s.radius + 4, s.radius - (s.outsideRadius - 5));\n        ctx.lineTo(s.radius + 9, s.radius - (s.outsideRadius - 5));\n        ctx.lineTo(s.radius + 0, s.radius - (s.outsideRadius - 13));\n        ctx.lineTo(s.radius - 9, s.radius - (s.outsideRadius - 5));\n        ctx.lineTo(s.radius - 4, s.radius - (s.outsideRadius - 5));\n        ctx.lineTo(s.radius - 4, s.radius - (s.outsideRadius + 5));\n        ctx.fill();\n      }\n    };\n\n    this.easeOut = function (t, b, c, d) {\n      var ts, tc;\n      ts = (t /= d) * t;\n      tc = ts * t;\n      return b + c * (tc + -3 * ts + 3 * t);\n    };\n\n    this.rotate = function () {\n      var spinAngle;\n      s.spinTime += 30;\n\n      if (s.spinTime + 5000 >= s.spinTimeTotal) {\n        _this.stop();\n\n        return;\n      }\n\n      spinAngle = s.spinAngleStart - _this.easeOut(s.spinTime, 0, s.spinAngleStart, s.spinTimeTotal);\n      s.startAngle += spinAngle * Math.PI / 180;\n\n      _this.draw();\n\n      s.spinTimeout = setTimeout(_this.rotate, 30);\n    };\n\n    this.spin = function (cb) {\n      _this.cb = cb;\n      s.spinAngleStart = Math.random() * 10 + 10;\n      s.spinTime = 0;\n      s.spinTimeTotal = Math.random() * 3 + 4 * 3000;\n\n      _this.rotate();\n    };\n\n    this.stop = function () {\n      var degrees;\n      var arcd;\n      var index;\n      clearTimeout(s.spinTimeout);\n      degrees = s.startAngle * 180 / Math.PI + 90;\n      arcd = s.arc * 180 / Math.PI;\n      index = Math.floor((360 - degrees % 360) / arcd);\n      ctx.save();\n\n      _this.done(s.members[index]);\n    };\n\n    this.done = function (member) {\n      _this.cb(member);\n    };\n\n    return {\n      init: _this.draw,\n      spin: _this.spin\n    };\n  };\n\n  if (true) {\n    if ( true && module.exports) {\n      exports = module.exports = PrizeWheel;\n    }\n\n    exports.PrizeWheel = PrizeWheel;\n  } else {}\n})(this);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/randomWheel.js\n");

/***/ })

})