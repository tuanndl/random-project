{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport './RandomNumber.scss';\n\nconst randomNumber = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    min: 1,\n    max: 100\n  });\n  const {\n    0: result,\n    1: setResult\n  } = useState(null);\n\n  const onChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: parseInt(value)\n    }));\n  };\n\n  const getRandomInt = max => {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  const random = () => {\n    let {\n      max,\n      min\n    } = state;\n\n    if (min > max) {\n      max = min + 1;\n    }\n\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      max\n    }));\n    return setResult(getRandomInt(max - min) + min);\n  };\n\n  return __jsx(\"div\", {\n    className: \"random-scope\"\n  }, __jsx(\"div\", {\n    className: \"random--number\"\n  }, __jsx(\"h3\", null, \"Quay s\\u1ED1 ng\\u1EABu nhi\\xEAn\"), __jsx(\"div\", {\n    className: \"random--div\"\n  }, __jsx(\"label\", null, \"Min:\"), __jsx(\"input\", {\n    name: \"min\",\n    value: state.min,\n    onChange: onChange,\n    type: \"number\"\n  })), __jsx(\"div\", null, __jsx(\"label\", null, \"Max:\"), __jsx(\"input\", {\n    name: \"max\",\n    value: state.max,\n    onChange: onChange,\n    type: \"number\"\n  })), __jsx(\"div\", null, __jsx(\"button\", {\n    className: \"btn-sm\",\n    onClick: random\n  }, \"Quay s\\u1ED1\")), __jsx(\"div\", null, __jsx(\"p\", {\n    className: \"result\"\n  }, \"K\\u1EBFt qu\\u1EA3: \", __jsx(\"span\", null, result !== null ? result : '')))));\n};\n\nexport default randomNumber;","map":null,"metadata":{},"sourceType":"module"}