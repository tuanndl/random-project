{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createReducer } from \"reduxsauce\";\nimport { Types } from \"../actionCreators\";\nexport const INITIAL_STATE = {\n  parseTranslatesLoaded: false,\n  translationLoaded: false,\n  translation: {},\n  error: false,\n  errorMessage: \"\"\n}; // ------\n\nexport const translationRequest = (state = INITIAL_STATE, action) => _objectSpread(_objectSpread({}, state), {}, {\n  parseTranslatesLoaded: false,\n  translationLoaded: false\n});\nexport const translationSuccess = (state = INITIAL_STATE, action) => _objectSpread(_objectSpread({}, state), {}, {\n  parseTranslatesLoaded: true,\n  translationLoaded: true,\n  translation: action.translation,\n  error: false\n});\nexport const translationFailure = (state = INITIAL_STATE, action) => _objectSpread(_objectSpread({}, state), {}, {\n  parseTranslatesLoaded: false,\n  translationLoaded: false,\n  translation: {},\n  error: true,\n  errorMessage: action.error\n}); // ------\n\nexport const HANDLERS = {\n  [Types.TRANSLATION_REQUEST]: translationRequest,\n  [Types.TRANSLATION_SUCCESS]: translationSuccess,\n  [Types.TRANSLATION_FAILURE]: translationFailure\n};\nexport default createReducer(INITIAL_STATE, HANDLERS);","map":null,"metadata":{},"sourceType":"module"}