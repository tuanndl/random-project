{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from \"redux-saga/effects\";\nimport translate from \"./translate\";\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([translate()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/macbook/Git/random-project/redux/sagas/index.js"],"names":["rootSaga","all","translate"],"mappings":";;oDAIyBA,Q;;AAJzB,SAASC,GAAT,QAAoB,oBAApB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,SAAUF,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACC,SAAS,EAAV,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all } from \"redux-saga/effects\";\n\nimport translate from \"./translate\";\n\nexport default function* rootSaga() {\n  yield all([translate()]);\n}\n"]},"metadata":{},"sourceType":"module"}