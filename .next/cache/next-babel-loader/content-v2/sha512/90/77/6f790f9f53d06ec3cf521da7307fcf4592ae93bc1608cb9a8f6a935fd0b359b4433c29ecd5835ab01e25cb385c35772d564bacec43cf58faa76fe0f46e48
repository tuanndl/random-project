{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport ActionCreators, { Types } from \"../actionCreators\";\nexport function* changeLanguage(action) {\n  const {\n    language\n  } = action;\n\n  if (language) {\n    try {\n      const translate = require(`../../config/translates/${language}.json`);\n\n      console.log(`=== Translate lang from folder: `, translate.language);\n      const translationObj = {\n        translate\n      };\n      yield put(ActionCreators.translationSuccess(translationObj));\n    } catch (err) {\n      yield put(ActionCreators.translationFailure(\"Error to change language: \", err));\n    }\n  } else {\n    yield put(ActionCreators.translationFailure(\"There's no language selected.\"));\n  }\n}\nexport default function* translateWatcher() {\n  yield takeLatest(Types.TRANSLATION_REQUEST, changeLanguage);\n}","map":{"version":3,"sources":["/Users/macbook/Git/random-project/redux/sagas/translate.js"],"names":["takeLatest","put","ActionCreators","Types","changeLanguage","action","language","translate","require","console","log","translationObj","translationSuccess","err","translationFailure","translateWatcher","TRANSLATION_REQUEST"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AAEA,OAAOC,cAAP,IAAyBC,KAAzB,QAAsC,mBAAtC;AAEA,OAAO,UAAUC,cAAV,CAAyBC,MAAzB,EAAiC;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,MAArB;;AACA,MAAIC,QAAJ,EAAc;AACZ,QAAI;AACF,YAAMC,SAAS,GAAGC,OAAO,CAAE,2BAA0BF,QAAS,OAArC,CAAzB;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAa,kCAAb,EAAgDH,SAAS,CAACD,QAA1D;AAEA,YAAMK,cAAc,GAAG;AAAEJ,QAAAA;AAAF,OAAvB;AACA,YAAMN,GAAG,CAACC,cAAc,CAACU,kBAAf,CAAkCD,cAAlC,CAAD,CAAT;AACD,KAND,CAME,OAAOE,GAAP,EAAY;AACZ,YAAMZ,GAAG,CACPC,cAAc,CAACY,kBAAf,CAAkC,4BAAlC,EAAgED,GAAhE,CADO,CAAT;AAGD;AACF,GAZD,MAYO;AACL,UAAMZ,GAAG,CACPC,cAAc,CAACY,kBAAf,CAAkC,+BAAlC,CADO,CAAT;AAGD;AACF;AAED,eAAe,UAAUC,gBAAV,GAA6B;AAC1C,QAAMf,UAAU,CAACG,KAAK,CAACa,mBAAP,EAA4BZ,cAA5B,CAAhB;AACD","sourcesContent":["import { takeLatest, put } from \"redux-saga/effects\";\n\nimport ActionCreators, { Types } from \"../actionCreators\";\n\nexport function* changeLanguage(action) {\n  const { language } = action;\n  if (language) {\n    try {\n      const translate = require(`../../config/translates/${language}.json`);\n      console.log(`=== Translate lang from folder: `, translate.language);\n\n      const translationObj = { translate };\n      yield put(ActionCreators.translationSuccess(translationObj));\n    } catch (err) {\n      yield put(\n        ActionCreators.translationFailure(\"Error to change language: \", err)\n      );\n    }\n  } else {\n    yield put(\n      ActionCreators.translationFailure(\"There's no language selected.\")\n    );\n  }\n}\n\nexport default function* translateWatcher() {\n  yield takeLatest(Types.TRANSLATION_REQUEST, changeLanguage);\n}\n"]},"metadata":{},"sourceType":"module"}