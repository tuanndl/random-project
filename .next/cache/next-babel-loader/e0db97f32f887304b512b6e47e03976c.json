{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Git/random-project/components/random/WheelName/WheelName.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\"; // import PrizeWheel from \"prize-wheel\";\n\nimport Winwheel from \"winwheel\";\n\nconst WheelName = props => {\n  let theWheel = new Winwheel({\n    numSegments: 8,\n    // Number of segments\n    outerRadius: 212,\n    // The size of the wheel.\n    centerX: 217,\n    // Used to position on the background correctly.\n    centerY: 219,\n    textFontSize: 28,\n    // Font size.\n    // Definition of all the segments.\n    segments: [{\n      fillStyle: \"#eae56f\",\n      text: \"Prize 1\"\n    }, {\n      fillStyle: \"#89f26e\",\n      text: \"Prize 2\"\n    }, {\n      fillStyle: \"#7de6ef\",\n      text: \"Prize 3\"\n    }, {\n      fillStyle: \"#e7706f\",\n      text: \"Prize 4\"\n    }, {\n      fillStyle: \"#eae56f\",\n      text: \"Prize 5\"\n    }, {\n      fillStyle: \"#89f26e\",\n      text: \"Prize 6\"\n    }, {\n      fillStyle: \"#7de6ef\",\n      text: \"Prize 7\"\n    }, {\n      fillStyle: \"#e7706f\",\n      text: \"Prize 8\"\n    }],\n    // Definition of the animation\n    animation: {\n      type: \"spinToStop\",\n      duration: 5,\n      spins: 8,\n      callbackFinished: alertPrize\n    }\n  });\n\n  function alertPrize(indicatedSegment) {\n    // Do basic alert of the segment text.\n    alert(\"You have won \" + indicatedSegment.text);\n  }\n\n  return __jsx(\"canvas\", {\n    id: \"canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  });\n};\n\nWheelName.propTypes = {};\nexport default WheelName;","map":{"version":3,"sources":["/Users/macbook/Git/random-project/components/random/WheelName/WheelName.js"],"names":["React","useEffect","PropTypes","Winwheel","WheelName","props","theWheel","numSegments","outerRadius","centerX","centerY","textFontSize","segments","fillStyle","text","animation","type","duration","spins","callbackFinished","alertPrize","indicatedSegment","alert","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,MAAIC,QAAQ,GAAG,IAAIH,QAAJ,CAAa;AAC1BI,IAAAA,WAAW,EAAE,CADa;AACV;AAChBC,IAAAA,WAAW,EAAE,GAFa;AAER;AAClBC,IAAAA,OAAO,EAAE,GAHiB;AAGZ;AACdC,IAAAA,OAAO,EAAE,GAJiB;AAK1BC,IAAAA,YAAY,EAAE,EALY;AAKR;AAClB;AACAC,IAAAA,QAAQ,EAAE,CACR;AAAEC,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KADQ,EAER;AAAED,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KAFQ,EAGR;AAAED,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KAHQ,EAIR;AAAED,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KAJQ,EAKR;AAAED,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KALQ,EAMR;AAAED,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KANQ,EAOR;AAAED,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KAPQ,EAQR;AAAED,MAAAA,SAAS,EAAE,SAAb;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KARQ,CAPgB;AAiB1B;AACAC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE,YADG;AAETC,MAAAA,QAAQ,EAAE,CAFD;AAGTC,MAAAA,KAAK,EAAE,CAHE;AAITC,MAAAA,gBAAgB,EAAEC;AAJT;AAlBe,GAAb,CAAf;;AA0BA,WAASA,UAAT,CAAoBC,gBAApB,EAAsC;AACpC;AACAC,IAAAA,KAAK,CAAC,kBAAkBD,gBAAgB,CAACP,IAApC,CAAL;AACD;;AAED,SAAO;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAjCD;;AAmCAV,SAAS,CAACmB,SAAV,GAAsB,EAAtB;AAEA,eAAenB,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n// import PrizeWheel from \"prize-wheel\";\nimport Winwheel from \"winwheel\";\n\nconst WheelName = (props) => {\n  let theWheel = new Winwheel({\n    numSegments: 8, // Number of segments\n    outerRadius: 212, // The size of the wheel.\n    centerX: 217, // Used to position on the background correctly.\n    centerY: 219,\n    textFontSize: 28, // Font size.\n    // Definition of all the segments.\n    segments: [\n      { fillStyle: \"#eae56f\", text: \"Prize 1\" },\n      { fillStyle: \"#89f26e\", text: \"Prize 2\" },\n      { fillStyle: \"#7de6ef\", text: \"Prize 3\" },\n      { fillStyle: \"#e7706f\", text: \"Prize 4\" },\n      { fillStyle: \"#eae56f\", text: \"Prize 5\" },\n      { fillStyle: \"#89f26e\", text: \"Prize 6\" },\n      { fillStyle: \"#7de6ef\", text: \"Prize 7\" },\n      { fillStyle: \"#e7706f\", text: \"Prize 8\" },\n    ],\n    // Definition of the animation\n    animation: {\n      type: \"spinToStop\",\n      duration: 5,\n      spins: 8,\n      callbackFinished: alertPrize,\n    },\n  });\n\n  function alertPrize(indicatedSegment) {\n    // Do basic alert of the segment text.\n    alert(\"You have won \" + indicatedSegment.text);\n  }\n\n  return <canvas id=\"canvas\"></canvas>;\n};\n\nWheelName.propTypes = {};\n\nexport default WheelName;\n"]},"metadata":{},"sourceType":"module"}