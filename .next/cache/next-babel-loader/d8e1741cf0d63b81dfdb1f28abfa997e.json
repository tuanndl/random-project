{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Git/random-project/components/random/RandomNumber.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./RandomNumber.scss\";\n\nconst randomNumber = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    min: 0,\n    max: 100\n  });\n  const {\n    0: result,\n    1: setResult\n  } = useState(null);\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  const getRandomInt = max => {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  const random = () => {\n    const {\n      max,\n      min\n    } = state;\n    return setResult(getRandomInt(max - min) + min);\n  };\n\n  return __jsx(\"div\", {\n    className: \"random--number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"True Random Number Generator\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Min:\", __jsx(\"input\", {\n    name: \"min\",\n    value: state.min,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Max:\", __jsx(\"input\", {\n    name: \"max\",\n    value: state.max,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: random,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Generate\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Result\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, result !== null ? result : \"\")));\n};\n\nrandomNumber.propTypes = {};\nexport default randomNumber;","map":{"version":3,"sources":["/Users/macbook/Git/random-project/components/random/RandomNumber.js"],"names":["React","useState","PropTypes","randomNumber","props","state","setState","min","max","result","setResult","onChange","e","name","value","target","prev","getRandomInt","Math","floor","random","propTypes"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,qBAAP;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC;AAAEM,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAD,CAAlC;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMU,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAT,IAAAA,QAAQ,CAAEU,IAAD,oCAAgBA,IAAhB;AAAsB,OAACH,IAAD,GAAQC;AAA9B,MAAD,CAAR;AACD,GAHD;;AAKA,QAAMG,YAAY,GAAIT,GAAD,IAAS;AAC5B,WAAOU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWX,GAAX,CAA3B,CAAP;AACD,GAFD;;AAIA,QAAMY,MAAM,GAAG,MAAM;AACnB,UAAM;AAAEZ,MAAAA,GAAF;AAAOD,MAAAA;AAAP,QAAeF,KAArB;AACA,WAAOK,SAAS,CAACO,YAAY,CAACT,GAAG,GAAGD,GAAP,CAAZ,GAA0BA,GAA3B,CAAhB;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,KAAK,EAAEF,KAAK,CAACE,GAA/B;AAAoC,IAAA,QAAQ,EAAEI,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,KAAK,EAAEN,KAAK,CAACG,GAA/B;AAAoC,IAAA,QAAQ,EAAEG,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAES,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAXF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,MAAM,KAAK,IAAX,GAAkBA,MAAlB,GAA2B,EAA/B,CAFF,CAfF,CADF;AAsBD,CAxCD;;AA0CAN,YAAY,CAACkB,SAAb,GAAyB,EAAzB;AAEA,eAAelB,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./RandomNumber.scss\";\n\nconst randomNumber = (props) => {\n  const [state, setState] = useState({ min: 0, max: 100 });\n  const [result, setResult] = useState(null);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setState((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  const random = () => {\n    const { max, min } = state;\n    return setResult(getRandomInt(max - min) + min);\n  };\n\n  return (\n    <div className=\"random--number\">\n      <h3>True Random Number Generator</h3>\n      <div>\n        Min:\n        <input name=\"min\" value={state.min} onChange={onChange} />\n      </div>\n      <div>\n        Max:\n        <input name=\"max\" value={state.max} onChange={onChange} />\n      </div>\n\n      <div>\n        <button onClick={random}>Generate</button>\n      </div>\n\n      <div>\n        <p>Result</p>\n        <p>{result !== null ? result : \"\"}</p>\n      </div>\n    </div>\n  );\n};\n\nrandomNumber.propTypes = {};\n\nexport default randomNumber;\n"]},"metadata":{},"sourceType":"module"}