{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/macbook/Git/random-project/components/random/WheelName/WheelName.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { RandomWheelName } from '../../../utils';\nimport './WheelName.scss';\nvar colors = ['#3369E8', '#D61026', '#EEB213', '#029926'];\n\nvar WheelName = function WheelName(props) {\n  _s();\n\n  console.log('RandomWheelName', RandomWheelName);\n\n  var _useState = useState(''),\n      names = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState({\n    el: '#wheel',\n    // Canvas ID\n    members: [],\n    // Array of members\n    colors: [],\n    // Background color of each member\n    radius: 250 // wheel radius\n\n  }),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  useEffect(function () {\n    var wheel = new RandomWheelName(options);\n    wheel.init();\n  }, [options]);\n\n  var convertValue = function convertValue(value) {\n    if (!value) {\n      return setOptions(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          members: [],\n          colors: []\n        });\n      });\n    }\n\n    var arr = value.split('\\n');\n    var temp = arr.map(function (_, index) {\n      return colors[index % 4];\n    });\n\n    for (var i = 0; i < arr.length; i++) {}\n\n    setOptions(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        members: arr,\n        colors: temp\n      });\n    });\n    console.log(arr);\n  };\n\n  var onChange = function onChange(e) {\n    var value = e.target.value;\n    convertValue(value);\n    setName(value);\n  };\n\n  return __jsx(\"div\", {\n    className: \"random-wheel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"canvas\", {\n    id: \"wheel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), __jsx(\"textarea\", {\n    className: \"textarea\",\n    name: 'name',\n    value: names,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(WheelName, \"x6S9s+SGjA1yhkOKD4Mqu+yZc3c=\");\n\n_c = WheelName;\nWheelName.propTypes = {};\nexport default WheelName;\n\nvar _c;\n\n$RefreshReg$(_c, \"WheelName\");","map":{"version":3,"sources":["/Users/macbook/Git/random-project/components/random/WheelName/WheelName.js"],"names":["React","useEffect","useState","PropTypes","RandomWheelName","colors","WheelName","props","console","log","names","setName","el","members","radius","options","setOptions","wheel","init","convertValue","value","prev","arr","split","temp","map","_","index","i","length","onChange","e","target","propTypes"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AAEA,OAAO,kBAAP;AAEA,IAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,eAA/B;;AAD2B,kBAGFF,QAAQ,CAAC,EAAD,CAHN;AAAA,MAGpBQ,KAHoB;AAAA,MAGbC,OAHa;;AAAA,mBAIGT,QAAQ,CAAC;AACrCU,IAAAA,EAAE,EAAE,QADiC;AACvB;AACdC,IAAAA,OAAO,EAAE,EAF4B;AAExB;AACbR,IAAAA,MAAM,EAAE,EAH6B;AAGzB;AACZS,IAAAA,MAAM,EAAE,GAJ6B,CAIxB;;AAJwB,GAAD,CAJX;AAAA,MAIpBC,OAJoB;AAAA,MAIXC,UAJW;;AAW3Bf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgB,KAAK,GAAG,IAAIb,eAAJ,CAAoBW,OAApB,CAAZ;AACAE,IAAAA,KAAK,CAACC,IAAN;AACD,GAHQ,EAGN,CAACH,OAAD,CAHM,CAAT;;AAKA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,QAAI,CAACA,KAAL,EAAY;AACV,aAAOJ,UAAU,CAAC,UAACK,IAAD;AAAA,+CAAgBA,IAAhB;AAAsBR,UAAAA,OAAO,EAAE,EAA/B;AAAmCR,UAAAA,MAAM,EAAE;AAA3C;AAAA,OAAD,CAAjB;AACD;;AAED,QAAMiB,GAAG,GAAGF,KAAK,CAACG,KAAN,CAAY,IAAZ,CAAZ;AAEA,QAAIC,IAAI,GAAGF,GAAG,CAACG,GAAJ,CAAQ,UAACC,CAAD,EAAIC,KAAJ;AAAA,aAActB,MAAM,CAACsB,KAAK,GAAG,CAAT,CAApB;AAAA,KAAR,CAAX;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAAG,CAACO,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC,CAAE;;AAEvCZ,IAAAA,UAAU,CAAC,UAACK,IAAD;AAAA,6CAAgBA,IAAhB;AAAsBR,QAAAA,OAAO,EAAES,GAA/B;AAAoCjB,QAAAA,MAAM,EAAEmB;AAA5C;AAAA,KAAD,CAAV;AAEAhB,IAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACD,GAdD;;AAgBA,MAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AAAA,QACdX,KADc,GACJW,CAAC,CAACC,MADE,CACdZ,KADc;AAEtBD,IAAAA,YAAY,CAACC,KAAD,CAAZ;AACAT,IAAAA,OAAO,CAACS,KAAD,CAAP;AACD,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,EAAE,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAU,IAAA,SAAS,EAAC,UAApB;AAA+B,IAAA,IAAI,EAAE,MAArC;AAA6C,IAAA,KAAK,EAAEV,KAApD;AAA2D,IAAA,QAAQ,EAAEoB,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA5CD;;GAAMxB,S;;KAAAA,S;AA8CNA,SAAS,CAAC2B,SAAV,GAAsB,EAAtB;AAEA,eAAe3B,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { RandomWheelName } from '../../../utils';\n\nimport './WheelName.scss';\n\nconst colors = ['#3369E8', '#D61026', '#EEB213', '#029926'];\n\nconst WheelName = (props) => {\n  console.log('RandomWheelName', RandomWheelName);\n\n  const [names, setName] = useState('');\n  const [options, setOptions] = useState({\n    el: '#wheel', // Canvas ID\n    members: [], // Array of members\n    colors: [], // Background color of each member\n    radius: 250, // wheel radius\n  });\n\n  useEffect(() => {\n    var wheel = new RandomWheelName(options);\n    wheel.init();\n  }, [options]);\n\n  const convertValue = (value) => {\n    if (!value) {\n      return setOptions((prev) => ({ ...prev, members: [], colors: [] }));\n    }\n\n    const arr = value.split('\\n');\n\n    let temp = arr.map((_, index) => colors[index % 4]);\n\n    for (let i = 0; i < arr.length; i++) {}\n\n    setOptions((prev) => ({ ...prev, members: arr, colors: temp }));\n\n    console.log(arr);\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    convertValue(value);\n    setName(value);\n  };\n\n  return (\n    <div className='random-wheel'>\n      <canvas id='wheel'></canvas>\n      <textarea className='textarea' name={'name'} value={names} onChange={onChange}></textarea>\n    </div>\n  );\n};\n\nWheelName.propTypes = {};\n\nexport default WheelName;\n"]},"metadata":{},"sourceType":"module"}