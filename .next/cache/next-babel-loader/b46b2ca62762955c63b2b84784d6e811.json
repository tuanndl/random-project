{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Git/random-project/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Head from \"next/head\";\nimport ActionCreator from \"../redux/actionCreators\";\nimport HomeScreen from \"../components\";\n\nclass Index extends Component {\n  static async getInitialProps({\n    ctx\n  }) {\n    const {\n      store,\n      isServer\n    } = ctx;\n    store.dispatch(ActionCreator.translationRequest(\"es\"));\n    return {\n      isServer\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatch,\n      isServer,\n      translate\n    } = this.props;\n\n    if (isServer && !translate) {\n      dispatch(ActionCreator.translationRequest(\"es\"));\n    }\n  }\n\n  render() {\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, \"My website\"), __jsx(\"meta\", {\n      name: \"title\",\n      content: \"my website\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      description: \"Here is the description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    })), __jsx(HomeScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default connect()(Index);","map":{"version":3,"sources":["/Users/macbook/Git/random-project/pages/index.js"],"names":["React","Component","Fragment","connect","Head","ActionCreator","HomeScreen","Index","getInitialProps","ctx","store","isServer","dispatch","translationRequest","componentDidMount","translate","props","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAC5B,eAAaO,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAAsC;AACpC,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBF,GAA5B;AAEAC,IAAAA,KAAK,CAACE,QAAN,CAAeP,aAAa,CAACQ,kBAAd,CAAiC,IAAjC,CAAf;AAEA,WAAO;AAAEF,MAAAA;AAAF,KAAP;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEF,MAAAA,QAAF;AAAYD,MAAAA,QAAZ;AAAsBI,MAAAA;AAAtB,QAAoC,KAAKC,KAA/C;;AAEA,QAAIL,QAAQ,IAAI,CAACI,SAAjB,EAA4B;AAC1BH,MAAAA,QAAQ,CAACP,aAAa,CAACQ,kBAAd,CAAiC,IAAjC,CAAD,CAAR;AACD;AACF;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,OAAO,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAM,MAAA,WAAW,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAOE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD;;AA7B2B;;AAgC9B,eAAed,OAAO,GAAGI,KAAH,CAAtB","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Head from \"next/head\";\n\nimport ActionCreator from \"../redux/actionCreators\";\n\nimport HomeScreen from \"../components\";\n\nclass Index extends Component {\n  static async getInitialProps({ ctx }) {\n    const { store, isServer } = ctx;\n\n    store.dispatch(ActionCreator.translationRequest(\"es\"));\n\n    return { isServer };\n  }\n\n  componentDidMount() {\n    const { dispatch, isServer, translate } = this.props;\n\n    if (isServer && !translate) {\n      dispatch(ActionCreator.translationRequest(\"es\"));\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Head>\n          <title>My website</title>\n          <meta name=\"title\" content=\"my website\" />\n          <meta description=\"Here is the description\" />\n        </Head>\n\n        <HomeScreen />\n      </Fragment>\n    );\n  }\n}\n\nexport default connect()(Index);\n"]},"metadata":{},"sourceType":"module"}