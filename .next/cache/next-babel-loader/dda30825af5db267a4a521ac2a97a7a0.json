{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport ActionCreators, { Types } from \"../actionCreators\";\nexport function* changeLanguage(action) {\n  const {\n    language\n  } = action;\n\n  if (language) {\n    try {\n      const translate = require(`../../config/translates/${language}.json`);\n\n      console.log(`=== Translate lang from folder: `, translate.language);\n      const translationObj = {\n        translate\n      };\n      yield put(ActionCreators.translationSuccess(translationObj));\n    } catch (err) {\n      yield put(ActionCreators.translationFailure(\"Error to change language: \", err));\n    }\n  } else {\n    yield put(ActionCreators.translationFailure(\"There's no language selected.\"));\n  }\n}\nexport default function* translateWatcher() {\n  yield takeLatest(Types.TRANSLATION_REQUEST, changeLanguage);\n}","map":null,"metadata":{},"sourceType":"module"}