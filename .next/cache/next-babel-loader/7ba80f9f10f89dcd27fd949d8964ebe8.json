{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport './RandomNumber.scss';\n\nvar randomNumber = function randomNumber(props) {\n  var _useState = useState({\n    min: 1,\n    max: 100\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(null),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var onChange = function onChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, parseInt(value)));\n    });\n  };\n\n  var getRandomInt = function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  var random = function random() {\n    var max = state.max,\n        min = state.min;\n\n    if (min > max) {\n      max = min + 1;\n    }\n\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        max: max\n      });\n    });\n    return setResult(getRandomInt(max - min) + min);\n  };\n\n  return __jsx(\"div\", {\n    className: \"random-scope\"\n  }, __jsx(\"div\", {\n    className: \"random--number\"\n  }, __jsx(\"h3\", null, \"Quay s\\u1ED1 ng\\u1EABu nhi\\xEAn\"), __jsx(\"div\", {\n    className: \"random--div\"\n  }, __jsx(\"label\", null, \"Min:\"), __jsx(\"input\", {\n    name: \"min\",\n    value: state.min,\n    onChange: onChange,\n    type: \"number\"\n  })), __jsx(\"div\", null, __jsx(\"label\", null, \"Max:\"), __jsx(\"input\", {\n    name: \"max\",\n    value: state.max,\n    onChange: onChange,\n    type: \"number\"\n  })), __jsx(\"div\", null, __jsx(\"button\", {\n    className: \"btn-sm\",\n    onClick: random\n  }, \"Quay s\\u1ED1\")), __jsx(\"div\", null, __jsx(\"p\", {\n    className: \"result\"\n  }, \"K\\u1EBFt qu\\u1EA3: \", __jsx(\"span\", null, result !== null ? result : '')))));\n};\n\nexport default randomNumber;","map":null,"metadata":{},"sourceType":"module"}